import { useEffect } from 'react';
import Head from 'next/head';
import { useDispatch } from 'react-redux';
import { enquireScreen } from 'enquire-js';
import DefalutLayout from '@/layouts/defalut';
import '@/styles/globals.css';
import { wrapper } from '@/utils/reduxInit';
import Message from '@/components/Message';

// https://ithelp.ithome.com.tw/articles/10269342
// https://vercel.com/archer102125220/resume-web

function MyApp({ Component, pageProps, router, err }) {
  const dispatch = useDispatch();

  useEffect(() => {
    const systemEnquireScreen = (payload, callback) =>
      dispatch({ type: 'system/enquireScreen', payload, callback });
    const windowWidthListener = () => {
      enquireScreen(
        (mobile) => {
          systemEnquireScreen(mobile ? true : false);
        } /*, '(max-width: 1024px)' */
      );
    };
    const systemSAVEIsClient = (payload, callback) =>
      dispatch({ type: 'system/SAVE_is_client', payload, callback });

    systemSAVEIsClient(typeof(window) === 'object');

    windowWidthListener();
    window.addEventListener('resize', windowWidthListener);
    return () => window.removeEventListener('resize', windowWidthListener);
  }, [dispatch]);


  const Layout = LayoutSwitch(router, err);
  return (
      <Layout {...pageProps}>
        <Head>
          <meta name="viewport" content="initial-scale=1, width=device-width" />
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
          <meta name="theme-color" content="#7E56A7"/>
        </Head>
        <Component {...pageProps} />
        <Message />
      </Layout>
  );
}

function LayoutSwitch() {
  return DefalutLayout;
}

export default wrapper.withRedux(MyApp);
